// An Iterator Guard
val threes = for (i <- 1 to 20 if i % 3 == 0) yield i

val quote = "Faith,Hope,,Charity";
for {
 t <- quote.split(",")
 if t != null
 if t.size > 0
}
 { println(t) }
 println(quote)
 
// Nested Iterator
for { x <- 1 to 2
      y <- 1 to 3 } { 
    print(s"($x,$y) ") 
}

// Value Binding
val powersOf2 = for (i <- 0 to 8; pow = 1 << i) yield pow

// While and Do/While loops
var x = 10
while (x > 0) {
    x -= 1
    println(x)
}

var x = 10; while (x > 0) x -= 1

// For/Loop
val x = 0
do println(s"Here I am, x = $x") while (x > 0)

// Another way of writing
val x = 0
do {
    println(s"Here I am, x = $x")
} while (x > 0)

